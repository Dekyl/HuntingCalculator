from PySide6.QtWidgets import QMainWindow
from typing import Protocol, Callable

from config.config import FlatDict

class ViewInterface(Protocol):
    def close_window(self) -> None: ...
    def show_dialog_confirmation(self, message: str, action: Callable[[], None], confirm_action: str = "exit") -> bool: ...
    def create_new_session_widget(self, name_spot: str, value_pack: bool, auto_calculate_best_profit: bool, market_tax: float, extra_profit: bool, spot_id_icon: str, no_market_items: list[str], items: FlatDict, elixirs_cost: str,
                                  lightstone_costs: FlatDict, imperfect_lightstone_costs: FlatDict) -> None: ...
    def update_exchange_hides_results(self, exchange_results: tuple[int, int, int]) -> None: ...
    def set_ui_enabled(self, enabled: bool) -> None: ...
    def set_session_button_enabled(self, enabled: bool) -> None: ...
    def show_dialog_type(self, msg: str, title: str, type: str, action: str = "no_action") -> None: ...
    def create_settings_widget(self) -> None: ...
    def show_dialog_select_session(self) -> None: ...
    def get_main_window_instance(self) -> QMainWindow: ...
    def change_page(self, page: str) -> None: ...
    def get_current_page_name(self) -> str | None: ...